{"ast":null,"code":"var _jsxFileName = \"D:\\\\akshay\\\\Weekly Learning\\\\webapps\\\\weather-app-push\\\\weather-app\\\\src\\\\components\\\\Forecast.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport AppContext from \"../provider/appContext\";\nimport Card from \"./Card\";\nimport Loader from \"./Loader\";\nimport Temperature from \"./Temperature\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Forecast() {\n  _s();\n\n  const {\n    app\n  } = useContext(AppContext);\n\n  if (!app.weather) {\n    return /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 12\n    }, this);\n  }\n\n  const {\n    daily\n  } = app.weather;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"forecast-container\",\n    children: daily.map((weather, index) => {\n      let date = new Date(weather.dt * 1000);\n      const dayFormatter = Intl.DateTimeFormat([], {\n        weekday: \"long\",\n        timeZone: weather.timezone\n      });\n      return /*#__PURE__*/_jsxDEV(Card, {\n        className: \"forecast-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"forecast-day\",\n          children: dayFormatter.format(date)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: `/weather_icons/${weather.weather[0].icon}.png`,\n          alt: \"icon\",\n          width: 100\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"forecast-description\",\n          children: weather.weather[0].description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"minmax-temp\",\n          children: [/*#__PURE__*/_jsxDEV(Temperature, {\n            temperature: weather.temp.max\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }, this), \"\\xB0\", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [/*#__PURE__*/_jsxDEV(Temperature, {\n              temperature: weather.temp.min\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 17\n            }, this), \"\\xB0\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Forecast, \"lzhT43wooPqAT9H1/oZIzaJV1zQ=\");\n\n_c = Forecast;\nexport default Forecast;\n\nvar _c;\n\n$RefreshReg$(_c, \"Forecast\");","map":{"version":3,"names":["React","useContext","AppContext","Card","Loader","Temperature","Forecast","app","weather","daily","map","index","date","Date","dt","dayFormatter","Intl","DateTimeFormat","weekday","timeZone","timezone","format","icon","description","temp","max","min"],"sources":["D:/akshay/Weekly Learning/webapps/weather-app-push/weather-app/src/components/Forecast.jsx"],"sourcesContent":["import React, { useContext } from \"react\";\r\nimport AppContext from \"../provider/appContext\";\r\nimport Card from \"./Card\";\r\nimport Loader from \"./Loader\";\r\nimport Temperature from \"./Temperature\";\r\n\r\nfunction Forecast() {\r\n  const { app } = useContext(AppContext);\r\n  if (!app.weather) {\r\n    return <Loader />;\r\n  }\r\n\r\n  const { daily } = app.weather;\r\n  return (\r\n    <div className=\"forecast-container\">\r\n      {daily.map((weather, index) => {\r\n        let date = new Date(weather.dt * 1000);\r\n        const dayFormatter = Intl.DateTimeFormat([], {\r\n          weekday: \"long\",\r\n          timeZone: weather.timezone,\r\n        });\r\n        return (\r\n          <Card key={index} className=\"forecast-card\">\r\n            <div className=\"forecast-day\">{dayFormatter.format(date)}</div>\r\n            <img\r\n              src={`/weather_icons/${weather.weather[0].icon}.png`}\r\n              alt=\"icon\"\r\n              width={100}\r\n            />\r\n            <div className=\"forecast-description\">\r\n              {weather.weather[0].description}\r\n            </div>\r\n            <div className=\"minmax-temp\">\r\n              <Temperature temperature={weather.temp.max} />°\r\n              <span>\r\n                <Temperature temperature={weather.temp.min} />°\r\n              </span>\r\n            </div>\r\n          </Card>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Forecast;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AAEA,SAASC,QAAT,GAAoB;EAAA;;EAClB,MAAM;IAAEC;EAAF,IAAUN,UAAU,CAACC,UAAD,CAA1B;;EACA,IAAI,CAACK,GAAG,CAACC,OAAT,EAAkB;IAChB,oBAAO,QAAC,MAAD;MAAA;MAAA;MAAA;IAAA,QAAP;EACD;;EAED,MAAM;IAAEC;EAAF,IAAYF,GAAG,CAACC,OAAtB;EACA,oBACE;IAAK,SAAS,EAAC,oBAAf;IAAA,UACGC,KAAK,CAACC,GAAN,CAAU,CAACF,OAAD,EAAUG,KAAV,KAAoB;MAC7B,IAAIC,IAAI,GAAG,IAAIC,IAAJ,CAASL,OAAO,CAACM,EAAR,GAAa,IAAtB,CAAX;MACA,MAAMC,YAAY,GAAGC,IAAI,CAACC,cAAL,CAAoB,EAApB,EAAwB;QAC3CC,OAAO,EAAE,MADkC;QAE3CC,QAAQ,EAAEX,OAAO,CAACY;MAFyB,CAAxB,CAArB;MAIA,oBACE,QAAC,IAAD;QAAkB,SAAS,EAAC,eAA5B;QAAA,wBACE;UAAK,SAAS,EAAC,cAAf;UAAA,UAA+BL,YAAY,CAACM,MAAb,CAAoBT,IAApB;QAA/B;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UACE,GAAG,EAAG,kBAAiBJ,OAAO,CAACA,OAAR,CAAgB,CAAhB,EAAmBc,IAAK,MADjD;UAEE,GAAG,EAAC,MAFN;UAGE,KAAK,EAAE;QAHT;UAAA;UAAA;UAAA;QAAA,QAFF,eAOE;UAAK,SAAS,EAAC,sBAAf;UAAA,UACGd,OAAO,CAACA,OAAR,CAAgB,CAAhB,EAAmBe;QADtB;UAAA;UAAA;UAAA;QAAA,QAPF,eAUE;UAAK,SAAS,EAAC,aAAf;UAAA,wBACE,QAAC,WAAD;YAAa,WAAW,EAAEf,OAAO,CAACgB,IAAR,CAAaC;UAAvC;YAAA;YAAA;YAAA;UAAA,QADF,uBAEE;YAAA,wBACE,QAAC,WAAD;cAAa,WAAW,EAAEjB,OAAO,CAACgB,IAAR,CAAaE;YAAvC;cAAA;cAAA;cAAA;YAAA,QADF;UAAA;YAAA;YAAA;YAAA;UAAA,QAFF;QAAA;UAAA;UAAA;UAAA;QAAA,QAVF;MAAA,GAAWf,KAAX;QAAA;QAAA;QAAA;MAAA,QADF;IAmBD,CAzBA;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AA8BD;;GArCQL,Q;;KAAAA,Q;AAuCT,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}